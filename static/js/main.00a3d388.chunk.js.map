{"version":3,"sources":["Container.jsx","Prompt.jsx","App.js","index.js"],"names":["dateDiffInWeeks","a","b","utc1","Date","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","chooseClass","i","completed","cls","Container","dob","averageAge","averageAgeDate","total","ary","Array","fill","map","_","className","x","AskDOB","onReturn","useState","age","setAge","type","value","onChange","e","target","onKeyPress","key","localStorage","setItem","App","shouldAsk","setShouldAsk","setDob","useEffect","window","_dob","getItem","parse","replace","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAMA,SAASA,EAAgBC,EAAGC,GAE1B,IAAMC,EAAOC,KAAKC,IAAIJ,EAAEK,cAAeL,EAAEM,WAAYN,EAAEO,WACjDC,EAAOL,KAAKC,IAAIH,EAAEI,cAAeJ,EAAEK,WAAYL,EAAEM,WAEvD,OAAOE,KAAKC,OAAQF,EAAON,GATT,MACG,GAWvB,SAASS,EAAYC,EAAGC,GACtB,IAAIC,EAAM,OAKV,OAHIF,EAAIC,IACNC,GAAO,aAEFA,EAGF,SAASC,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,WACzBC,EAAiB,IAAIf,KAAKa,EAAIX,cAAgBY,EAAY,EAAG,GAC7DE,EAAQpB,EAAgBiB,EAAKE,GAC7BL,EAAYd,EAAgBiB,EAAK,IAAIb,MACrCiB,EAAM,IAAIC,MAAMF,GAAOG,KAAK,GAAGC,KAAI,SAACC,EAAGZ,GAAJ,OAAUA,KAEnD,OAAO,qBAAKa,UAAU,YAAf,SACJL,EAAIG,KAAI,SAAAG,GAAC,OACR,qBAAaD,UAAWd,EAAYe,EAAGb,IAA7Ba,QC7BT,SAASC,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAAY,EACXC,mBAAS,IADE,mBAC1BC,EAD0B,KACrBC,EADqB,KAQjC,OAAO,qCACH,0DACA,uBACIC,KAAK,OACLC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAOI,EAAEC,OAAOH,QACjCI,WAAY,SAACF,GACK,UAAVA,EAAEG,MAXdC,aAAaC,QAAQ,MAAOV,GAC5BF,WC8BOa,MAhCf,WAAgB,IAAD,EACqBZ,mBAAS,MAD9B,mBACNa,EADM,KACKC,EADL,OAESd,mBAAS,IAAI1B,MAFtB,mBAENa,EAFM,KAED4B,EAFC,KAuBb,OAnBAC,qBAAU,WACR,GAAIC,OAAOP,aAAc,CACvB,IAAIQ,EAAOR,aAAaS,QAAQ,OAEnB,OAATD,GACFH,EAAO,IAAIzC,KAAKA,KAAK8C,MAAMF,EAAKG,QAAQ,IAAK,QAC7CP,GAAa,IAEbA,GAAa,QAIfQ,MAAM,oCAIP,CAACnC,EAAK0B,IAIP,qBAAKjB,UAAU,MAAf,SACiB,OAAdiB,EAAqB,GAAKA,EACzB,cAACf,EAAD,CAAQC,SAAU,kBAAMe,GAAa,MACrC,cAAC,EAAD,CAAW3B,IAAKA,EAAKC,WAAY,QC5BzCmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.00a3d388.chunk.js","sourcesContent":["import './Container.css';\r\n\r\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\nconst _DAYS_PER_WEEK = 7\r\n\r\n// a and b are javascript Date objects\r\nfunction dateDiffInWeeks(a, b) {\r\n  // Discard the time and time-zone information.\r\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n\r\n  return Math.floor(((utc2 - utc1) / _MS_PER_DAY) / _DAYS_PER_WEEK);\r\n}\r\n\r\nfunction chooseClass(i, completed) {\r\n  let cls = \"cell\"\r\n\r\n  if (i < completed)\r\n    cls += \" selected\"\r\n\r\n  return cls\r\n}\r\n\r\nexport function Container({ dob, averageAge }) {\r\n  const averageAgeDate = new Date(dob.getFullYear() + averageAge, 0, 1)\r\n  const total = dateDiffInWeeks(dob, averageAgeDate)\r\n  const completed = dateDiffInWeeks(dob, new Date())\r\n  const ary = new Array(total).fill(0).map((_, i) => i)\r\n\r\n  return <div className=\"container\">\r\n    {ary.map(x =>\r\n      <div key={x} className={chooseClass(x, completed)} />\r\n    )}\r\n  </div>\r\n}","import { useState } from \"react\"\r\n\r\nexport function AskDOB({ onReturn }) {\r\n    const [age, setAge] = useState(\"\");\r\n\r\n    const onSubmit = () => {\r\n        localStorage.setItem(\"dob\", age)\r\n        onReturn()\r\n    }\r\n\r\n    return <>\r\n        <h2>Enter your Date of Birth</h2>\r\n        <input\r\n            type=\"date\"\r\n            value={age}\r\n            onChange={(e) => setAge(e.target.value)}\r\n            onKeyPress={(e) => {\r\n                if (e.key === \"Enter\")\r\n                    onSubmit()\r\n            }} />\r\n    </>\r\n}","import { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container } from './Container'\nimport { AskDOB } from './Prompt'\n\nfunction App() {\n  const [shouldAsk, setShouldAsk] = useState(null)\n  const [dob, setDob] = useState(new Date())\n\n  useEffect(() => {\n    if (window.localStorage) {\n      let _dob = localStorage.getItem('dob')\n\n      if (_dob !== null) {\n        setDob(new Date(Date.parse(_dob.replace(\"-\", \"/\"))))\n        setShouldAsk(false)\n      } else {\n        setShouldAsk(true)\n      }\n\n    } else {\n      alert(\"Grow up! use a better browser!\")\n    }\n\n    // eslint-disable-next-line\n  }, [dob, shouldAsk])\n\n\n  return (\n    <div className=\"App\">\n      {shouldAsk === null ? \"\" : shouldAsk ?\n        <AskDOB onReturn={() => setShouldAsk(false)} /> :\n        <Container dob={dob} averageAge={75} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}